/*
 * This file was automatically generated.
 */

package com.worldline.acquiring.sdk.java.v1.domain;

import java.time.ZonedDateTime;

public class ApiRefundResponse {

    private String authorizationCode;

    private CardPaymentDataForResource cardPaymentData;

    private String operationId;

    private String referencedPaymentId;

    private ApiReferencesForResponses references;

    private String refundId;

    private String responder;

    private String responseCode;

    private String responseCodeCategory;

    private String responseCodeDescription;

    private String retryAfter;

    private String status;

    private ZonedDateTime statusTimestamp;

    private AmountData totalAuthorizedAmount;

    /**
     * Authorization approval code
     */
    public String getAuthorizationCode() {
        return authorizationCode;
    }

    /**
     * Authorization approval code
     */
    public void setAuthorizationCode(String value) {
        this.authorizationCode = value;
    }

    public CardPaymentDataForResource getCardPaymentData() {
        return cardPaymentData;
    }

    public void setCardPaymentData(CardPaymentDataForResource value) {
        this.cardPaymentData = value;
    }

    /**
     * A globally unique identifier of the operation, generated by you.<br>
     * We advise you to submit a UUID or an identifier composed of an arbitrary string
     * and a UUID/URL-safe Base64 UUID (RFC 4648 ยง5).<br>
     * It's used to detect duplicate requests or to reference an operation in
     * technical reversals.
     */
    public String getOperationId() {
        return operationId;
    }

    /**
     * A globally unique identifier of the operation, generated by you.<br>
     * We advise you to submit a UUID or an identifier composed of an arbitrary string
     * and a UUID/URL-safe Base64 UUID (RFC 4648 ยง5).<br>
     * It's used to detect duplicate requests or to reference an operation in
     * technical reversals.
     */
    public void setOperationId(String value) {
        this.operationId = value;
    }

    /**
     * The identifier of the payment referenced by this refund.
     */
    public String getReferencedPaymentId() {
        return referencedPaymentId;
    }

    /**
     * The identifier of the payment referenced by this refund.
     */
    public void setReferencedPaymentId(String value) {
        this.referencedPaymentId = value;
    }

    /**
     * A set of references returned in responses
     */
    public ApiReferencesForResponses getReferences() {
        return references;
    }

    /**
     * A set of references returned in responses
     */
    public void setReferences(ApiReferencesForResponses value) {
        this.references = value;
    }

    /**
     * the ID of the refund
     */
    public String getRefundId() {
        return refundId;
    }

    /**
     * the ID of the refund
     */
    public void setRefundId(String value) {
        this.refundId = value;
    }

    /**
     * The party that originated the response
     */
    public String getResponder() {
        return responder;
    }

    /**
     * The party that originated the response
     */
    public void setResponder(String value) {
        this.responder = value;
    }

    /**
     * Numeric response code, e.g. 0000, 0005
     */
    public String getResponseCode() {
        return responseCode;
    }

    /**
     * Numeric response code, e.g. 0000, 0005
     */
    public void setResponseCode(String value) {
        this.responseCode = value;
    }

    /**
     * Category of response code.
     */
    public String getResponseCodeCategory() {
        return responseCodeCategory;
    }

    /**
     * Category of response code.
     */
    public void setResponseCodeCategory(String value) {
        this.responseCodeCategory = value;
    }

    /**
     * Description of the response code
     */
    public String getResponseCodeDescription() {
        return responseCodeDescription;
    }

    /**
     * Description of the response code
     */
    public void setResponseCodeDescription(String value) {
        this.responseCodeDescription = value;
    }

    /**
     * The duration to wait after the initial submission before retrying the payment.<br>
     * Expressed using ISO 8601 duration format, ex: PT2H for 2 hours.<br>
     * This field is only present when the payment can be retried later.<br>
     * PT0 means that the payment can be retried immediately.
     */
    public String getRetryAfter() {
        return retryAfter;
    }

    /**
     * The duration to wait after the initial submission before retrying the payment.<br>
     * Expressed using ISO 8601 duration format, ex: PT2H for 2 hours.<br>
     * This field is only present when the payment can be retried later.<br>
     * PT0 means that the payment can be retried immediately.
     */
    public void setRetryAfter(String value) {
        this.retryAfter = value;
    }

    /**
     * The status of the payment, refund or credit transfer
     */
    public String getStatus() {
        return status;
    }

    /**
     * The status of the payment, refund or credit transfer
     */
    public void setStatus(String value) {
        this.status = value;
    }

    /**
     * Timestamp of the status in format yyyy-MM-ddTHH:mm:ssZ
     */
    public ZonedDateTime getStatusTimestamp() {
        return statusTimestamp;
    }

    /**
     * Timestamp of the status in format yyyy-MM-ddTHH:mm:ssZ
     */
    public void setStatusTimestamp(ZonedDateTime value) {
        this.statusTimestamp = value;
    }

    /**
     * Amount for the operation.
     */
    public AmountData getTotalAuthorizedAmount() {
        return totalAuthorizedAmount;
    }

    /**
     * Amount for the operation.
     */
    public void setTotalAuthorizedAmount(AmountData value) {
        this.totalAuthorizedAmount = value;
    }
}
