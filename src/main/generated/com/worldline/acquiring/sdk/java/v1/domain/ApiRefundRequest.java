/*
 * This file was automatically generated.
 */

package com.worldline.acquiring.sdk.java.v1.domain;

import java.time.ZonedDateTime;

public class ApiRefundRequest {

    private AmountData amount;

    private CardPaymentDataForRefund cardPaymentData;

    private DccData dynamicCurrencyConversion;

    private MerchantData merchant;

    private String operationId;

    private PaymentReferences references;

    private ZonedDateTime transactionTimestamp;

    /**
     * Amount for the operation.
     */
    public AmountData getAmount() {
        return amount;
    }

    /**
     * Amount for the operation.
     */
    public void setAmount(AmountData value) {
        this.amount = value;
    }

    /**
     * Card data for refund
     */
    public CardPaymentDataForRefund getCardPaymentData() {
        return cardPaymentData;
    }

    /**
     * Card data for refund
     */
    public void setCardPaymentData(CardPaymentDataForRefund value) {
        this.cardPaymentData = value;
    }

    /**
     * Dynamic Currency Conversion (DCC) rate data from DCC lookup response.<br>
     * Mandatory for DCC transactions.
     */
    public DccData getDynamicCurrencyConversion() {
        return dynamicCurrencyConversion;
    }

    /**
     * Dynamic Currency Conversion (DCC) rate data from DCC lookup response.<br>
     * Mandatory for DCC transactions.
     */
    public void setDynamicCurrencyConversion(DccData value) {
        this.dynamicCurrencyConversion = value;
    }

    /**
     * Merchant Data
     */
    public MerchantData getMerchant() {
        return merchant;
    }

    /**
     * Merchant Data
     */
    public void setMerchant(MerchantData value) {
        this.merchant = value;
    }

    /**
     * A globally unique identifier of the operation, generated by you.<br>
     * We advise you to submit a UUID or an identifier composed of an arbitrary string
     * and a UUID/URL-safe Base64 UUID (RFC 4648 ยง5).<br>
     * It's used to detect duplicate requests or to reference an operation in
     * technical reversals.
     */
    public String getOperationId() {
        return operationId;
    }

    /**
     * A globally unique identifier of the operation, generated by you.<br>
     * We advise you to submit a UUID or an identifier composed of an arbitrary string
     * and a UUID/URL-safe Base64 UUID (RFC 4648 ยง5).<br>
     * It's used to detect duplicate requests or to reference an operation in
     * technical reversals.
     */
    public void setOperationId(String value) {
        this.operationId = value;
    }

    /**
     * Payment References
     */
    public PaymentReferences getReferences() {
        return references;
    }

    /**
     * Payment References
     */
    public void setReferences(PaymentReferences value) {
        this.references = value;
    }

    /**
     * Timestamp of transaction in ISO 8601 format (YYYY-MM-DDThh:mm:ss+TZD)<br>
     * It can be expressed in merchant time zone (ex: 2023-10-10T08:00+02:00)
     * or in UTC (ex: 2023-10-10T08:00Z)
     */
    public ZonedDateTime getTransactionTimestamp() {
        return transactionTimestamp;
    }

    /**
     * Timestamp of transaction in ISO 8601 format (YYYY-MM-DDThh:mm:ss+TZD)<br>
     * It can be expressed in merchant time zone (ex: 2023-10-10T08:00+02:00)
     * or in UTC (ex: 2023-10-10T08:00Z)
     */
    public void setTransactionTimestamp(ZonedDateTime value) {
        this.transactionTimestamp = value;
    }
}
